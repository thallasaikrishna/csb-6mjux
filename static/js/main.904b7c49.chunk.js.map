{"version":3,"sources":["App.js","index.js"],"names":["App","useState","weight","setWeight","height","setHeight","bmi","setBmi","bmiClass","setBmiClass","getBmi","className","style","display","width","margin","padding","boxSizing","label","placeholder","handleChange","event","target","value","onClick","bmiValue","toFixed","isNaN","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4MAmFeA,EA7EH,WACV,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsBJ,qBAAtB,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAgCN,qBAAhC,mBAAOO,EAAP,KAAiBC,EAAjB,KAcMC,EAAS,SAACJ,GACd,OAAIA,EAAM,KACD,cAELA,GAAO,MAAQA,EAAM,KAChB,gBAELA,GAAO,IAAMA,EAAM,KACd,aAELA,GAAO,GACF,eADT,GAKF,OACE,qBAAKK,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBACEC,MAAO,CACLC,QAAS,QACTC,MAAO,MACPC,OAAQ,SACRC,QAAS,QACTC,UAAW,cANf,SASE,kEAEF,qBAAKN,UAAU,MAAf,SACE,cAAC,IAAD,CACEO,MAAM,SACNC,YAAY,qBACZC,aA7CiB,SAACC,GAAD,OAAWhB,EAAUgB,EAAMC,OAAOC,QA8CnDA,MAAOnB,MAGX,qBAAKO,UAAU,MAAf,SACE,cAAC,IAAD,CACEO,MAAM,SACNC,YAAY,qBACZC,aApDiB,SAACC,GAAD,OAAWlB,EAAUkB,EAAMC,OAAOC,QAqDnDA,MAAOrB,MAGX,qBAAKS,UAAU,MAAf,SACE,cAAC,IAAD,CAAQO,MAAM,YAAYM,QAvDf,WACjB,IAAIC,GAAYvB,EAAM,SAAIE,EAAS,IAAQ,IAAGsB,QAAQ,GACtDnB,EAAOkB,GACP,IAAIjB,EAAWE,EAAOe,GACtBhB,EAAYD,GACZH,EAAU,IACVF,EAAU,SAmDN,qBAAKQ,UAAU,MAAf,SACGgB,MAAMrB,GAAO,KAAO,6CAAgBA,OAEvC,qBAAKK,UAAU,MAAf,SACE,6BAAKH,YCtEToB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.904b7c49.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport TextInput from \"./components/TextInput\";\nimport Button from \"./components/Button\";\n\nimport \"./styles.css\";\nconst App = () => {\n  const [weight, setWeight] = useState();\n  const [height, setHeight] = useState();\n  const [bmi, setBmi] = useState();\n  const [bmiClass, setBmiClass] = useState();\n\n  const handleHeightChange = (event) => setHeight(event.target.value);\n  const handleWeightChange = (event) => setWeight(event.target.value);\n\n  const computeBmi = () => {\n    let bmiValue = (weight / (height / 100) ** 2).toFixed(2);\n    setBmi(bmiValue);\n    let bmiClass = getBmi(bmiValue);\n    setBmiClass(bmiClass);\n    setHeight(\"\");\n    setWeight(\"\");\n  };\n\n  const getBmi = (bmi) => {\n    if (bmi < 18.5) {\n      return \"Underweight\";\n    }\n    if (bmi >= 18.5 && bmi < 24.9) {\n      return \"Normal weight\";\n    }\n    if (bmi >= 25 && bmi < 29.9) {\n      return \"Overweight\";\n    }\n    if (bmi >= 30) {\n      return \"Obesity\";\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div\n          style={{\n            display: \"block\",\n            width: \"50%\",\n            margin: \"0 auto\",\n            padding: \"100px\",\n            boxSizing: \"border-box\"\n          }}\n        >\n          <h2>Welcome to our BMI Calculator!</h2>\n        </div>\n        <div className=\"row\">\n          <TextInput\n            label=\"Height\"\n            placeholder=\"Enter height in cm\"\n            handleChange={handleHeightChange}\n            value={height}\n          />\n        </div>\n        <div className=\"row\">\n          <TextInput\n            label=\"Weight\"\n            placeholder=\"Enter weight in kg\"\n            handleChange={handleWeightChange}\n            value={weight}\n          />\n        </div>\n        <div className=\"row\">\n          <Button label=\"CALCULATE\" onClick={computeBmi} />\n        </div>\n        <div className=\"row\">\n          {isNaN(bmi) ? null : <h3>Your BMI = {bmi}</h3>}\n        </div>\n        <div className=\"row\">\n          <h3>{bmiClass}</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}